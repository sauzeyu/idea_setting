<application>
  <component name="AppStorage">
    <option name="lastReplacementTargetLanguage" value="ENGLISH" />
    <option name="newTranslationDialogHeight" value="404" />
    <option name="newTranslationDialogWidth" value="757" />
    <option name="newTranslationDialogX" value="669" />
    <option name="newTranslationDialogY" value="487" />
    <option name="pinNewTranslationDialog" value="true" />
    <histories>
      <item value="The blockHandler is located in the same class with the original method by default. However, if some methods share the same signature and intend to set the same block handler, then users can set the class where the block handler exists. Note that the block handler method must be static." />
      <item value="Returns:&#10;the entry type (inbound or outbound), outbound by default" />
      <item value="The annotation indicates a definition of Sentinel resource" />
      <item value="The annotation indicates a definition of Sentinel resource.&#10;Since:&#10;0.1.1&#10;Author:&#10;Eric Zhao, zhaoyuguang" />
      <item value="A read-only DataSource with Nacos backend. When the data in Nacos backend has been modified, Nacos will automatically push the new value so that the dynamic configuration can be real-time." />
      <item value="This demo demonstrates how to use Nacos as the data source of Sentinel rules. Before you start, you need to start a Nacos server in local first, and then use NacosConfigSender to publish initial rule configuration to Nacos." />
      <item value="Test Resource" />
      <item value="remote Address" />
      <item value="fill your namespace id,if you want to use namespace. for example: 0f5c7314-4983-4022-ad5a-347de1d1057d,you can get it on nacos's console" />
      <item value="s demo demonstrates how to use Nacos as the data source of Sentinel rules. Before you start, you need to start a Nacos server in local first, and then use NacosConfigSender to publish initial rule configuration to Nacos." />
      <item value="This demo demonstrates how to use Nacos as the data source of Sentinel rules. Before you start, you need to start a Nacos server in local first, and then use NacosConfigSender to publish initial rule configuration to Nacos.&#10;Author:&#10;Eric Zhao" />
      <item value="Single-thread pool. Once the thread pool is blocked, we throw up the old tas" />
      <item value="A read-only DataSource with Nacos backend. When the data in Nacos backend has been modified, Nacos will automatically push the new value so that the dynamic configuration can be real-time.&#10;Author:&#10;Eric Zhao" />
      <item value="Fetch real time statistics info of the machine.&#10;Params:&#10;ip – ip to fetch&#10;port – port of the ip&#10;type – one of [root, default, cluster], 'root' means fetching from tree root node, 'default' means fetching from tree default node, 'cluster' means fetching from cluster node.&#10;searchKey – key to search&#10;Returns:&#10;node statistics info." />
      <item value="修改" />
      <item value="修改密码" />
      <item value="修改米" />
      <item value="et the foreground fill color Note: Ensure Foreground color is set prior to background color.&#10;Params:&#10;bg – color" />
      <item value="  BLACK1(0),&#10;    WHITE1(1),&#10;    RED1(2),&#10;    BRIGHT_GREEN1(3),&#10;    BLUE1(4),&#10;    YELLOW1(5),&#10;    PINK1(6),&#10;    TURQUOISE1(7),&#10;    BLACK(8),&#10;    WHITE(9),&#10;    RED(10),&#10;    BRIGHT_GREEN(11),&#10;    BLUE(12),&#10;    YELLOW(13),&#10;    PINK(14),&#10;    TURQUOISE(15),&#10;    DARK_RED(16),&#10;    GREEN(17),&#10;    DARK_BLUE(18),&#10;    DARK_YELLOW(19),&#10;    VIOLET(20),&#10;    TEAL(21),&#10;    GREY_25_PERCENT(22),&#10;    GREY_50_PERCENT(23),&#10;    CORNFLOWER_BLUE(24),&#10;    MAROON(25),&#10;    LEMON_CHIFFON(26),&#10;    LIGHT_TURQUOISE1(27),&#10;    ORCHID(28),&#10;    CORAL(29),&#10;    ROYAL_BLUE(30),&#10;    LIGHT_CORNFLOWER_BLUE(31),&#10;    SKY_BLUE(40),&#10;    LIGHT_TURQUOISE(41),&#10;    LIGHT_GREEN(42),&#10;    LIGHT_YELLOW(43),&#10;    PALE_BLUE(44),&#10;    ROSE(45),&#10;    LAVENDER(46),&#10;    TAN(47),&#10;    LIGHT_BLUE(48),&#10;    AQUA(49),&#10;    LIME(50),&#10;    GOLD(51),&#10;    LIGHT_ORANGE(52),&#10;    ORANGE(53),&#10;    BLUE_GREY(54),&#10;    GREY_40_PERCENT(55),&#10;    DARK_TEAL(56),&#10;    SEA_GREEN(57),&#10;    DARK_GREEN(58),&#10;    OLIVE_GREEN(59),&#10;    BROWN(60),&#10;    PLUM(61),&#10;    INDIGO(62),&#10;    GREY_80_PERCENT(63),&#10;    AUTOMATIC(64);" />
      <item value="无" />
      <item value="透明" />
      <item value="A deprecated indexing scheme for colours that is still required for some records, and for backwards compatibility with OLE2 formats.&#10;Each element corresponds to a color index (zero-based). When using the default indexed color palette, the values are not written out, but instead are implied. When the color palette has been modified from default, then the entire color palette is used.&#10;Author:&#10;Yegor Kozlov" />
      <item value="     0-7 duplicates of 8-15 for compatibility (OOXML spec pt.1 sec. 18.8.27)" />
      <item value="INDIGO" />
      <item value="GREY_80_PERCENT" />
      <item value="AUTOMATIC" />
      <item value="LIGHT TURQUOISE" />
      <item value="BLUE 1" />
      <item value="RED 1" />
      <item value="WHITE 1" />
      <item value="BLACK 1" />
      <item value="GREY_25_PERCENT" />
      <item value="et the background fill color.&#10;For example:&#10;       cs.setFillPattern(HSSFCellStyle.FINE_DOTS );&#10;       cs.setFillBackgroundColor(new HSSFColor.RED().getIndex());&#10;       &#10;optionally a Foreground and background fill can be applied: Note: Ensure Foreground color is set prior to background&#10;       cs.setFillPattern(HSSFCellStyle.FINE_DOTS );&#10;       cs.setFillForegroundColor(new HSSFColor.BLUE().getIndex());&#10;       cs.setFillBackgroundColor(new HSSFColor.RED().getIndex());&#10;       &#10;or, for the special case of SOLID_FILL:&#10;       cs.setFillPattern(HSSFCellStyle.SOLID_FOREGROUND );&#10;       cs.setFillForegroundColor(new HSSFColor.RED().getIndex());&#10;       &#10;It is necessary to set the fill style in order for the color to be shown in the cell.&#10;Params:&#10;bg – color" />
      <item value="et the background fill color.&#10;Params:&#10;bg – color" />
      <item value="bold" />
      <item value="bo" />
      <item value="get the index within the XSSFWorkbook (sequence within the collection of Font objects)&#10;Returns:&#10;unique index number of the underlying record this Font represents (probably you don't care unless you're comparing which one is which)&#10;Since:&#10;4.0.0" />
      <item value="get whether the cell's using this style are to be hidden&#10;Returns:&#10;hidden - whether the cell using this style should be hidden" />
      <item value="Returns a string whose value is this string, with any leading and trailing whitespace removed.&#10;If this String object represents an empty character sequence, or the first and last characters of character sequence represented by this String object both have codes greater than '\u0020' (the space character), then a reference to this String object is returned.&#10;Otherwise, if there is no character with a code greater than '\u0020' in the string, then a String object representing an empty string is returned.&#10;Otherwise, let k be the index of the first character in the string whose code is greater than '\u0020', and let m be the index of the last character in the string whose code is greater than '\u0020'. A String object is returned, representing the substring of this string that begins with the character at index k and ends with the character at index m-that is, the result of this.substring(k, m + 1).&#10;This method may be used to trim whitespace (as defined above) from the beginning and end of a string.&#10;Returns:&#10;A string whose value is this string, with any leading and trailing white space removed, or this string if it has no leading or trailing white space." />
      <item value="存在" />
      <item value="already Ex" />
      <item value="Return a hexadecimal string representation of the MD5 digest of the given bytes.&#10;Params:&#10;bytes – the bytes to calculate the digest over&#10;Returns:&#10;a hexadecimal digest string" />
      <item value="Miscellaneous methods for calculating digests.&#10;Mainly for internal use within the framework; consider Apache Commons Codec  for a more comprehensive suite of digest utilities.&#10;Since:&#10;3.0&#10;Author:&#10;Arjen Poutsma, Juergen Hoeller, Craig Andrew" />
      <item value="Miscellaneous methods for calculating digests.&#10;Mainly for internal use within the framework; consider Apache Commons Codec  for a more comprehensive suite of digest utilities.&#10;Since:&#10;3.0&#10;Author:&#10;Arjen Poutsma, Juergen Hoeller, Craig Andrews" />
      <item value="Inferred type 'E' for type parameter 'E' is not within its bound; should implement 'com.baomidou.mybatisplus.core.metadata.IPage&lt;com.vecentek.back.entity.DkmKey&gt;'" />
      <item value="Native code saves some indication of the stack backtrace in this slo" />
      <item value="The first argument is treated as the name of a system property. System properties are accessible through the System.getProperty(String) method. The string value of this property is then interpreted as an integer value using the grammar supported by decode and an Integer object representing this value is returned.&#10;If there is no property with the specified name, if the specified name is empty or null, or if the property does not have the correct numeric format, then null is returned.&#10;In other words, this method returns an Integer object equal to the value of:&#10;getInteger(nm, null)&#10;Params:&#10;nm – property name.&#10;Returns:&#10;the Integer value of the property.&#10;Throws:&#10;SecurityException – for the same reasons as System.getProperty&#10;See Also:&#10;System.getProperty(String), System.getProperty(String, String)" />
      <item value="Converts the argument to an int by an unsigned conversion. In an unsigned conversion to an int, the high-order 24 bits of the int are zero and the low-order 8 bits are equal to the bits of the byte argument. Consequently, zero and positive byte values are mapped to a numerically equal int value and negative byte values are mapped to an int value equal to the input plus 28.&#10;Params:&#10;x – the value to convert to an unsigned int&#10;Returns:&#10;the argument converted to int by an unsigned conversion&#10;Since:&#10;1.8" />
      <item value="Parses the string argument as a signed short in the radix specified by the second argument. The characters in the string must all be digits, of the specified radix (as determined by whether Character.digit(char, int) returns a nonnegative value) except that the first character may be an ASCII minus sign '-' ('\u002D') to indicate a negative value or an ASCII plus sign '+' ('\u002B') to indicate a positive value. The resulting short value is returned.&#10;An exception of type NumberFormatException is thrown if any of the following situations occurs:&#10;The first argument is null or is a string of length zero.&#10;The radix is either smaller than Character.MIN_RADIX or larger than Character.MAX_RADIX.&#10;Any character of the string is not a digit of the specified radix, except that the first character may be a minus sign '-' ('\u002D') or plus sign '+' ('\u002B') provided that the string is longer than length 1.&#10;The value represented by the string is not a value of type short.&#10;Params:&#10;s – the String containing the short representation to be parsed&#10;radix – the radix to be used while parsing s&#10;Returns:&#10;the short represented by the string argument in the specified radix.&#10;Throws:&#10;NumberFormatException – If the String does not contain a parsable short." />
      <item value="Returns true if this list contains no elements.&#10;Returns:&#10;true if this list contains no elements" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="1317" />
        <entry key="ENGLISH" value="1318" />
        <entry key="DANISH" value="2" />
        <entry key="FRISIAN" value="1" />
        <entry key="LATIN" value="1" />
        <entry key="PORTUGUESE" value="1" />
        <entry key="JAPANESE" value="1" />
        <entry key="INDONESIAN" value="2" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1650779790376" />
  </component>
  <component name="Settings">
    <option name="autoReplace" value="true" />
    <option name="keepFormat" value="true" />
    <option name="selectTargetLanguageBeforeReplacement" value="true" />
    <option name="showActionsInContextMenuOnlyWithSelection" value="false" />
    <option name="showExplanation" value="true" />
    <option name="showWordsOnStartup" value="true" />
    <option name="translateDocumentation" value="true" />
  </component>
</application>